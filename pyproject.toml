[tool.poetry]
name = "ananyas-thing"
version = "0.0.0"
description = "Python for Arts College Librandis"
authors = ["Who Cares <beeswax@notyours.inc>"]
license = "WTFPL"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.110.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
python-multipart = "^0.0.9"
pillow = "^10"

[tool.poetry.group.dev.dependencies]
ruff = "*"

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
  "C4",   # flake8-comprehensions
  "F",    # pyflakes
  "G",    # flake8-logging-format
  "I",    # isort
  "PTH",  # flake8-use-pathlib
  "RUF",  # ruff
  "SIM",  # flake8-simplify
  "TCH",  # flake8-type-checking
  "UP",   # pyupgrade
  "W",    # pycodestyle (warning)
  "PERF", # perflint
  "ANN",  # flake8-annotations
]
ignore = [
  "F402",    # import-shadowed-by-loop-var
  "F403",    # undefined-local-with-import-star
  "F405",    # undefined-local-with-import-star-usage
  "PERF203", # try-except-in-loop
  "RUF001",  # ambiguous-unicode-character-string
  "RUF009",  # function-call-in-dataclass-default-argument
  "SIM105",  # suppressible-exception
  "UP034",   # extraneous-parentheses
  "UP038",   # non-pep604-isinstance
  "ANN101",  # missing-type-self
  "ANN102",  # missing-type-cls
  "ANN401",  # any-type
]

[tool.ruff.lint.isort]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"
line-ending = "lf"

[tool.pyright]
venvPath = "."
venv = ".venv/"
exclude = ["**/__pycache__"]
include = ["py_template"]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
reportImportCycles = false
reportMissingTypeStubs = false
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
